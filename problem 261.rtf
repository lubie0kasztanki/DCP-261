{\rtf1\ansi\ansicpg1250\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red67\green67\blue67;\red246\green246\blue246;\red97\green101\blue107;
}
{\*\expandedcolortbl;;\cssrgb\c33333\c33333\c33333;\cssrgb\c97255\c97255\c97255;\cssrgb\c45490\c47059\c49412;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth11400\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt700 \clpadl700 \clpadb700 \clpadr700 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
Good morning! Here's your coding interview problem for today.\
This problem was asked by Amazon.\
Huffman coding is a method of encoding characters based on their frequency. Each letter is assigned a variable-length binary string, such as 
\f1 \cb3 0101
\f0 \cb1  or 
\f1 \cb3 111110
\f0 \cb1 , where shorter lengths correspond to more common letters. To accomplish this, a binary tree is built such that the path from the root to any leaf uniquely maps to a character. When traversing the path, descending to a left child corresponds to a 
\f1 \cb3 0
\f0 \cb1  in the prefix, while descending right corresponds to 
\f1 \cb3 1
\f0 \cb1 .\
Here is an example tree (note that only the leaf nodes have letters):\
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\fs26 \cf4 \cb3         *\
      /   \\\
    *       *\
   / \\     / \\\
  *   a   t   *\
 /             \\\
c               s\
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \cb1 With this encoding, 
\f1 \cb3 cats
\f0 \cb1  would be represented as 
\f1 \cb3 0000110111
\f0 \cb1 .\
Given a dictionary of character frequencies, build a Huffman tree, and use it to determine a mapping between characters and their encoded binary strings.\cell \lastrow\row
}